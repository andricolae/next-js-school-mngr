//  "use client"

import jsPDF from "jspdf";
import {autoTable } from "jspdf-autotable";

declare module "jspdf" {
    interface jsPDF {
        autoTable: (options: any) => jsPDF;
        lastAutoTable?: { finalY: number };
    }
}


interface ResultItemForPdf {
    id: number;
    title: string;
    studentName: string;
    studentSurname: string;
    teacherName: string;
    teacherSurname: string;
    score: number;
    className: string;
    startTime: Date; 
    subject: string;
}

interface PdfHeaderDetails {
    companyName?: string;
    companyAddress?: string;
   
}


export function GenerateResultsPDF(
    results: ResultItemForPdf[],
    headerDetails?: PdfHeaderDetails 
): Blob {
    const doc = new jsPDF();

    
    doc.setFontSize(14);
    doc.text("Raport Rezultate Elevi", 105, 20, { align: "center" });

    doc.setFontSize(10);
    
    if (headerDetails?.companyName) {
        doc.text(`Companie: ${headerDetails.companyName}`, 20, 30);
    }
    if (headerDetails?.companyAddress) {
        doc.text(`Adresă: ${headerDetails.companyAddress}`, 20, 35);
    }
    
    const tableHeaders = [
        "Titlu",
        "Subiect",
        "Elev",
        "Profesor",
        "Clasă",
        "Scor",
        "Dată",
    ];

    const tableBody = results.map((item) => [
        item.title,
        item.subject,
        `${item.studentName} ${item.studentSurname}`,
        `${item.teacherName} ${item.teacherSurname}`,
        item.className,
        item.score.toString(), 
        new Intl.DateTimeFormat("ro-RO").format(new Date(item.startTime)), 
    ]);

    
    autoTable(doc, {
        startY: 45,
        head: [tableHeaders],
        body: tableBody,
        styles: { fontSize: 8, cellPadding: 2, overflow: 'linebreak' },
        headStyles: { fillColor: [22, 160, 133], textColor: [255, 255, 255], fontStyle: 'bold' },
        alternateRowStyles: { fillColor: [245, 245, 245] },
        theme: "striped",
       
        didDrawPage: function (data: any) {
            let pageCount = doc.getNumberOfPages();
            doc.setFontSize(8);
            doc.text(`Pagina ${data.pageNumber} din ${pageCount}`, data.settings.margin.left, doc.internal.pageSize.height - 10);
        }
    });

   
    const finalY = doc.lastAutoTable?.finalY || doc.internal.pageSize.height - 20; 

    doc.setFontSize(9);
    doc.text("Generated by School Management System", 20, finalY + 20);

    const now = new Date();

    const datePart = now.toLocaleDateString('ro-RO', { day: '2-digit', month: '2-digit', year: 'numeric' }).replace(/\./g, '-');
    const timePart = now.toLocaleTimeString('ro-RO', { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }).replace(/:/g, '-');

    const filename = `Raport_${datePart}_${timePart}.pdf`;

    doc.save(filename); 
    const pdfBlob = doc.output("blob");
    return pdfBlob;
}